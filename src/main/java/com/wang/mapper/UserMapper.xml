<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
  
<mapper namespace="com.wang.dao.IUserDAO">
	<resultMap id="UserMap" type="com.wang.bean.User">
		<result column="id" property="id" jdbcType="VARCHAR"/>
		<result column="imageUri" property="imageUri" jdbcType="VARCHAR"/>
		<result column="sex" property="sex" jdbcType="VARCHAR"/>
		<result column="signature" property="signature" jdbcType="VARCHAR"/>
		<result column="age" property="age" jdbcType="INTEGER"/>
		<result column="alive" property="isAlive" jdbcType="BOOLEAN"/>
	</resultMap>
	
	<select id="getUser" resultMap="UserMap" 
		parameterType="String" >
		select * from user where id = #{id}
	</select>
	
	<select id="getAllUsers" resultMap="UserMap">
		select * from user
	</select>
	
	<select id="getUserImgUri" resultType="String">
		select imageUri from user where id = #{id}
	</select>
	
	<update id="addFriend">
		insert into ${dbName} values(#{friendId}, #{groupName})	
	</update>
	
	<update id="createRecordTable" parameterType="String">
		create table if not exists ${dbName} (srcId varchar(20), dstId varchar(20), content varchar(512), timestamp Date,constraint foreign key (srcId) references User(id), foreign key (dstId) references User(id));
	</update>
	
	<select id="requireAccount" parameterType="String" resultType="String">
		select id from user_set where flag=0 limit 0,1
	</select>
	
	<update id="applyAccount" >
		insert into user values(#{userId}, 'http://localhost:8080/SpringMVC/images/defaultIcon.jpg', 'woman', 0, 'signature', null);
		create table history_${userId}(friendId varchar(20), content varchar(512), timestamp datetime) character set = utf8;
		create table friend_${userId}(friendId varchar(20) DEFAULT NULL, groupName varchar(200) NOT NULL) ENGINE=InnoDB DEFAULT CHARSET=utf8;
		update user_set set flag=1 where id = #{userId};
	</update>
	
	<delete id="deleteUser">
		delete from user where id = #{id}
	</delete>
	
	<delete id="deleteFriend">
		delete from ${dbName} where FriendId = #{friendId}
	</delete>
	
	<update id="updateUser" parameterType="com.wang.bean.User">
		update user set age = #{user}.age, sex= #{user}.sex, signature = #{user}.signature where id= #{user}.id
	</update>
	
	<select id="isAlive" resultType="Boolean">
		select IFNULL(alive, false) from user where id = #{userId}
	</select>
	
	<update id="setAlive">
		update user set alive = #{isAlive} where id = #{userId}
	</update>
</mapper>